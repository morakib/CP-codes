const int N=1e5+10;
vector<int> graph[N];
int visited[N];
int level[N];

void bfs(int source){
    queue<int>q;
    q.push(source);
    visited[source]=1;
    while(!q.empty()){
       int current_vertex=q.front();
       q.pop();
       for(int child:graph[current_vertex]){
        if(!visited[child]){
            q.push(child);
            visited[child]=1;
            level[child]=level[current_vertex]+1;
        }
       }
    }
}


void lessgo(){
    int n;
    cin>>n;
    for(int i=0;i<n-1;i++){
        int x,y;
        cin>>x>>y;
        graph[x].pb(y);
        graph[y].pb(x);
    }
    bfs(1);
    
}
