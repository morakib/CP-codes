#define checkbit(x, k)   ((x>>k)&1)
#define setbit(n,num)    ((<<(n))|num)
#define unsetbit(n,num)  (~(<<(n))&num)
/////////////////////below code is for printing binary////////////////////////////
void printBinary(int n,int integer_datasize){
    for(int i=integer_datasize;i>=0;i--){
        cout<<((n>>i)&1);
    }
    cout<<endl;
}
////////////////////////below code is for bitmasking////////////////////////////////
int main(){
    int n;
    cin>>n;
    vector<int>masks(n,0);
    for(int i=0;i<n;i++){
        int num_workers;
        cin>>num_workers;
        int mask=0;
        for(int j=0;j<num_workers;j++){
            int day;
            cin>>day;
            mask=(1<<day)|mask;
        }
        masks[i]=mask;
    }
    int max_working_days=0;
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            int intersection=masks[i]&masks[j];
            int working_days=__builtin_popcount(intersection);
            max_working_days=max(max_working_days,working_days);
            cout<<i<<" th worker and "<<j<<" th worker days are "
        }
    }

}
